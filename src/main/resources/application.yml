spring:
  application:
    name: notification
  datasource:
    url: jdbc:postgresql://notification-db:5432/notification
    username: ace
    password: charitan
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: "notification-service"
      value-deserializer: org.springframework.kafka.support.serializer.DelegatingByTopicDeserializer
      properties:
        spring.kafka.value.serialization.bytopic.config: "key.+:org.apache.kafka.common.serialization.StringDeserializer"
        spring.kafka.value.serialization.bytopic.default: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring:
        json:
          trusted:
            packages: "ace.charitan.*"
eureka:
  client:
    healthcheck:
      enabled: true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URI:http://eureka-server:8761/eureka}
    initial-instance-info-replication-interval-seconds: 40
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
logging:
  level:
    org.springframework.web.socket: DEBUG
    org.springframework.messaging.simp: DEBUG
auth:
  cookie:
    name: "charitan"
server:
  port: 0